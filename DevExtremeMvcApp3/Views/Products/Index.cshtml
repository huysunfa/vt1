@{ 
    string PageName = MainMenu.Product.PageName;
}
<div class="long-title"><h3>Danh sách @PageName</h3></div>

@(Html.DevExtreme().DataGrid<DevExtremeMvcApp3.Models.Product>()
        .DataSource(ds => ds.WebApi()
            .RouteName("ProductsAPIApi")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .DeleteAction("Delete")
            .Key("ProductId")
        )
        .RemoteOperations(true)
        .Columns(columns =>
        {
            columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Buttons(b => {

                 b.Add().Name(GridColumnButtonName.Edit);
                b.Add().Name(GridColumnButtonName.Delete);
                

            });
            columns.AddFor(m => m.Barcode).Caption("Mã vạch");

            columns.AddFor(m => m.BranchId).Caption("Chi nhánh");

            columns.AddFor(m => m.DefaultBuyingPrice).Caption("Gía nhập");

            columns.AddFor(m => m.DefaultSellingPrice).Caption("Gía mua");

            columns.AddFor(m => m.Description).Caption("Mô tả");

            columns.AddFor(m => m.ProductCode).Caption("Mã vật tư");

            columns.AddFor(m => m.ProductImageUrl).Caption("Ảnh vật tư");

            columns.AddFor(m => m.ProductName).Caption("Tên vật tư");

            columns.AddFor(m => m.UnitOfMeasureId).Caption("Đơn vị tính");
   
        })
        .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowAdding(true)
            .AllowUpdating(true)
            .AllowDeleting(true)
        ).Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .Export(e => e.Enabled(true).FileName(MainMenu.Product.PageName).AllowExportSelectedData(true))
   .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
        .ColumnMinWidth(150).ColumnResizingMode(ColumnResizingMode.Widget).AllowColumnResizing(true).Scrolling(z=>z.ScrollByContent(true))
    .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.ProductId).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)
@{
    string PageName = MainMenu.SalesOrderLine.PageName;
}
<div class="long-title"><h3>Danh sách @PageName</h3></div>
 
@(Html.DevExtreme().DataGrid<DevExtremeMvcApp3.Models.SalesOrderLine>
    ()
    .DataSource(ds => ds.WebApi()
    .RouteName("SalesOrderLinesAPIApi")
    .LoadAction("Get").LoadParams(new { ID =  ViewBag.ID })
    .InsertAction("Post").LoadParams(new { ID =  ViewBag.ID })
    .UpdateAction("Put").LoadParams(new { ID =  ViewBag.ID })
    .DeleteAction("Delete")
    .Key("SalesOrderLineId")
    )
    .RemoteOperations(true)
    .Columns(columns =>
    {

    columns.Add()
    .Type(GridCommandColumnType.Buttons)
    .Buttons(b =>
    {
    b.Add().Name(GridColumnButtonName.Edit);
    b.Add().Name(GridColumnButtonName.Delete);
    });

 
        
    columns.AddFor(m => m.ProductId).Caption("Vật tư").Lookup(lookup => lookup
    .DataSource(d => d.WebApi()
    .RouteName("ProductsAPIApi")
    .LoadAction("Get")
    .Key("ProductId"))
    .DisplayExpr("ProductName")
    .ValueExpr("ProductId")
    );
       columns.AddFor(m => m.Amount).Caption("Số tiền");

    columns.AddFor(m => m.Description).Caption("Mô tả");

    columns.AddFor(m => m.DiscountAmount).Caption("Giảm giá");

    columns.AddFor(m => m.DiscountPercentage).Caption("Tỷ lệ chiết khấu");

    columns.AddFor(m => m.Price).Caption("Giá bán");


    columns.AddFor(m => m.Quantity).Caption("Số lượng");


    columns.AddFor(m => m.SubTotal).Caption("Phụ phí");

    columns.AddFor(m => m.TaxAmount).Caption("Thuế");

    columns.AddFor(m => m.TaxPercentage).Caption("Tỷ lệ thuế");

    columns.AddFor(m => m.Total).Caption("Tổng tiền");
    })
    .Editing(e => e.Mode(GridEditMode.Popup)
    .AllowAdding(true)
    .AllowUpdating(true)
    .AllowDeleting(true)
    ).Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .ColumnMinWidth(150).ColumnResizingMode(ColumnResizingMode.Widget).AllowColumnResizing(true).Scrolling(z => z.ScrollByContent(true))
    .Summary(s => s
    .TotalItems(totalItems =>
    {
    totalItems.AddFor(m => m.SalesOrderId).SummaryType(SummaryType.Count);
    })
    .GroupItems(groupItems =>
    {
    groupItems.Add().SummaryType(SummaryType.Count);
    })
    ).OnInitNewRow("onInitNewRow")
    )

<script>
    function onInitNewRow (e) {
        e.data.SalesOrderId = '@ViewBag.ID'; 
 }
</script>